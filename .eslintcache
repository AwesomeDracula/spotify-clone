[{"C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\index.js":"1","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\App.js":"2","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\Player.js":"4","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\contextapi\\DataLayer.js":"5","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\login\\Login.js":"6","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\Sidebar.js":"7","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\Body.js":"8","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\Footer.js":"9","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\spotifyapi\\Spotify.js":"10","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\SongRow.js":"11","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\Header.js":"12","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\SidebarOption.js":"13","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\reducer\\reducer.js":"14","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\UserAccount.js":"15","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\Home.js":"16","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\Search.js":"17","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\Collection.js":"18","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\HeaderSearchBar.js":"19","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\CollectionHeader.js":"20","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\Playlists.js":"21","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\Albums.js":"22","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\Artists.js":"23","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\Podcasts.js":"24"},{"size":735,"mtime":1611589353352,"results":"25","hashOfConfig":"26"},{"size":2067,"mtime":1611917825809,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":1544,"mtime":1611911271909,"results":"29","hashOfConfig":"26"},{"size":392,"mtime":1611454518558,"results":"30","hashOfConfig":"26"},{"size":383,"mtime":1611454701604,"results":"31","hashOfConfig":"26"},{"size":2059,"mtime":1611763031205,"results":"32","hashOfConfig":"26"},{"size":1491,"mtime":1611819563671,"results":"33","hashOfConfig":"26"},{"size":1769,"mtime":1611454690823,"results":"34","hashOfConfig":"26"},{"size":898,"mtime":1611915168631,"results":"35","hashOfConfig":"26"},{"size":473,"mtime":1611454693320,"results":"36","hashOfConfig":"26"},{"size":326,"mtime":1611756305040,"results":"37","hashOfConfig":"26"},{"size":339,"mtime":1611742683104,"results":"38","hashOfConfig":"26"},{"size":1567,"mtime":1611917841237,"results":"39","hashOfConfig":"26"},{"size":1508,"mtime":1611652378102,"results":"40","hashOfConfig":"26"},{"size":184,"mtime":1611721985203,"results":"41","hashOfConfig":"26"},{"size":230,"mtime":1611756905372,"results":"42","hashOfConfig":"26"},{"size":1358,"mtime":1611918202582,"results":"43","hashOfConfig":"26"},{"size":388,"mtime":1611757744860,"results":"44","hashOfConfig":"26"},{"size":1152,"mtime":1611762155780,"results":"45","hashOfConfig":"26"},{"size":1517,"mtime":1611913690359,"results":"46","hashOfConfig":"26"},{"size":1426,"mtime":1611921576881,"results":"47","hashOfConfig":"26"},{"size":1483,"mtime":1611921599211,"results":"48","hashOfConfig":"26"},{"size":1386,"mtime":1611921616240,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"gqbjbu",{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"52"},"C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\index.js",[],["109","110"],"C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\App.js",["111","112","113","114","115"],"import { useEffect ,useState} from 'react';\nimport './App.css';\nimport Login from './login/Login';\nimport Player from './components/Player';\nimport { getTokenFromUrl } from './spotifyapi/Spotify';\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport {useDataLayerValue} from './contextapi/DataLayer';\n\nconst spotifyApi = new SpotifyWebApi();\n\nfunction App() {\n  // const [token, setToken] = useState(null);\n  const [{user, playlists, token, saved_album}, dispatch] = useDataLayerValue();\n  // console.log(useDataLayerValue());\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n    if(_token){\n      dispatch({\n        type: 'SET_TOKEN',\n        token: _token\n      });\n      // setToken(_token);\n\n      spotifyApi.setAccessToken(_token);\n      spotifyApi.getMe().then(user => {\n        dispatch({\n          type: 'SET_USER',\n          user: user\n        });\n      });\n\n      spotifyApi.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: 'SET_PLAYLISTS',\n          playlists: playlists\n        });\n      });\n\n      spotifyApi.getPlaylist(\"3SzuSFG2e1a2sSPqWuohYu\").then(response => {\n        dispatch({\n          type: 'SET_CURRENT_PLAYLIST',\n          current_playlist: response\n        })\n      });\n\n      spotifyApi.getMySavedAlbums().then(response => {\n        dispatch({\n            type: 'SET_SAVED_ALBUM',\n            saved_album: response\n        })\n      });\n\n      spotifyApi.getFollowedArtists().then(response => {\n        dispatch({\n          type: 'SET_FOLLOWED_ARTISTS',\n          followed_artists: response\n        })\n      })\n\n      spotifyApi.getMySavedShows().then(response => {\n        console.log(\"I have\",response);\n        dispatch({\n          type: 'SET_PODCASTS',\n          podcasts: response\n        })\n      })\n    }\n  }, []);\n\n  return (\n    <div className=\"app\">\n        {\n          token ? (\n            <Player spotifyApi={spotifyApi}/>\n          ) : (\n            <Login />\n          )\n        }\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\Player.js",["116"],"import React from 'react';\r\nimport \"./Player.css\";\r\nimport { useDataLayerValue } from '../contextapi/DataLayer';\r\nimport Sidebar from './Sidebar';\r\nimport Body from './Body';\r\nimport Home from './Home';\r\nimport Search from './Search';\r\nimport Footer from './Footer';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Collection from './Collection';\r\n\r\nfunction Player({spotifyApi}) {\r\n    const [{playlists}, dispatch] = useDataLayerValue();\r\n    return (\r\n        <Router>\r\n            <div className=\"player\">\r\n                <div className='player-body'>\r\n                \r\n                    <Sidebar spotifyApi={spotifyApi}/>\r\n                    <Switch>\r\n                        <Route path=\"/\" exact>\r\n                            <Home />\r\n                        </Route>\r\n                        <Route path=\"/search\">\r\n                            <Search />\r\n                        </Route>\r\n                        <Route path=\"/collection\" >\r\n                            <Collection />\r\n                        </Route>\r\n                        {playlists?.items?.map(playlist => (\r\n                            <Route path={\"/playlist/\"+playlist.name}>\r\n                                <Body spotifyApi={spotifyApi}/>\r\n                            </Route>\r\n                        ))}\r\n                    </Switch>\r\n                </div>\r\n                <div>\r\n                    <Footer />\r\n                </div>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Player\r\n","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\contextapi\\DataLayer.js",[],"C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\login\\Login.js",[],"C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\Sidebar.js",["117"],"import React from 'react'\r\nimport \"./Sidebar.css\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\r\nimport { useDataLayerValue } from '../contextapi/DataLayer';\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nfunction Sidebar({spotifyApi}) {\r\n    const [{playlists, current_playlist}, dispatch] = useDataLayerValue();\r\n\r\n    const playlistOnClicked = (playlistId) => {\r\n        spotifyApi.getPlaylist(playlistId).then(response => {\r\n            dispatch({\r\n              type: 'SET_CURRENT_PLAYLIST',\r\n              current_playlist: response\r\n            })\r\n          })\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <img className=\"sidebar-logo\" src='https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg' alt='' />\r\n            <NavLink exact to=\"/\" activeClassName=\"selected\">\r\n                <SidebarOption title='Trang chủ' Icon={HomeIcon} />\r\n            </NavLink>\r\n            <NavLink to=\"/search\" activeClassName=\"selected\">\r\n                <SidebarOption title='Tìm kiếm' Icon={SearchIcon} />\r\n            </NavLink>\r\n            <NavLink to=\"/collection\" activeClassName=\"selected\">\r\n                <SidebarOption title='Thư viện' Icon={LibraryMusicIcon} />\r\n            </NavLink>\r\n            <br />\r\n            <strong className=\"sidebar-title\">PLAYLIST</strong>\r\n            <hr />\r\n            {/* {console.log(\"I have this playplist:\",playlists)} */}\r\n            <div className=\"userPlaylists\">\r\n                {playlists?.items?.map(playlist => (\r\n                    <div onClick={() => playlistOnClicked(playlist.id)}>\r\n                        <Link to={\"/playlist/\"+playlist.name} >\r\n                            <SidebarOption title={playlist.name} />\r\n                        </Link>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\Body.js",["118"],"import React from 'react'\r\nimport \"./Body.css\";\r\nimport { useDataLayerValue } from '../contextapi/DataLayer';\r\nimport Header from './Header';\r\nimport SongRow from './SongRow';\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\n\r\nfunction Body({spotifyApi}) {\r\n    const [{current_playlist}, dispatch] = useDataLayerValue();\r\n    return (\r\n        <div className=\"body\">\r\n            <Header/>\r\n\r\n            <div className=\"body-info\">\r\n                <img src={current_playlist?.images[0].url} alt=\"\" />\r\n                <div className=\"body-infoText\">\r\n                    {console.log(current_playlist)}\r\n                    <strong>PLAYLIST</strong>\r\n                    <h2>{current_playlist?.name}</h2>\r\n                    <p>{current_playlist?.description}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"body-songs\">\r\n                <div className=\"body-icons\">\r\n                    <PlayCircleFilledIcon className=\"body-shuffle\" color=\"green\" />\r\n                    <FavoriteIcon fontSize=\"large\" />\r\n                    <MoreHorizIcon />\r\n                </div>\r\n                {/* List of songs */}\r\n                {current_playlist?.tracks.items.map(item => (\r\n                    <SongRow track={item.track} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body\r\n","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\Footer.js",[],"C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\spotifyapi\\Spotify.js",[],"C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\SongRow.js",[],"C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\Header.js",[],"C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\SidebarOption.js",[],"C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\reducer\\reducer.js",[],"C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\UserAccount.js",["119","120"],"import React, {useState} from 'react'\r\nimport { useDataLayerValue } from '../contextapi/DataLayer'\r\nimport { Avatar } from '@material-ui/core';\r\nimport AccountBoxOutlinedIcon from '@material-ui/icons/AccountBoxOutlined';\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport './UserAccount.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction UserAccount() {\r\n    const [{user}, dispatch] = useDataLayerValue();\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const toggle = () => setDropdownOpen(prevState => !prevState);\r\n\r\n    return (\r\n        <div className=\"useraccount\">\r\n            <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n                <DropdownToggle caret>\r\n                    <div className=\"useraccount-name\">\r\n                        <Avatar src={user?.images[0]?.url} alt=\"Name\" />\r\n                        <h4>{user?.display_name}</h4>\r\n                    </div>\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                    <DropdownItem><span>Tài khoản</span><FontAwesomeIcon icon={faUser}/></DropdownItem>\r\n                    <DropdownItem>Hồ sơ</DropdownItem>\r\n                    <DropdownItem divider />\r\n                    <DropdownItem>Đăng xuất</DropdownItem>\r\n                </DropdownMenu>\r\n            </Dropdown>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserAccount\r\n","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\Home.js",[],"C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\Search.js",[],"C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\Collection.js",[],"C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\HeaderSearchBar.js",[],["121","122"],"C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\CollectionHeader.js",[],"C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\Playlists.js",["123"],"import React from 'react';\r\nimport './Playlists.css';\r\nimport { useDataLayerValue } from '../contextapi/DataLayer';\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardImg,\r\n    CardText,\r\n    CardBody,\r\n    CardTitle,\r\n  } from \"reactstrap\";\r\n\r\nfunction Playlists() {\r\n    const [{playlists}, dispatch] = useDataLayerValue();\r\n    return (\r\n        <div className=\"playlists\">\r\n            <Container fluid={true}>\r\n                <h4>Playlist</h4>\r\n                <Row>\r\n                    {/* <Col sm=\"4\">\r\n                        <h3>Hello</h3>\r\n                    </Col> */}\r\n                {playlists?.items?.map((item) => (\r\n                    <Col sm=\"2\">\r\n                        <Card>\r\n                            <CardImg\r\n                                top\r\n                                width=\"100%\"\r\n                                src={item.images[0].url}\r\n                                alt=\"Card image\"\r\n                            />\r\n                            <CardBody>\r\n                            <CardTitle tag=\"h5\">{item.name}</CardTitle>\r\n                            <CardText>{item.description}</CardText>\r\n                            {/* <Button>\r\n                                Add to cart\r\n                            </Button> */}\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                ))}\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Playlists\r\n","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\Albums.js",["124"],"import React from 'react';\r\nimport { useDataLayerValue } from '../contextapi/DataLayer';\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardImg,\r\n    CardText,\r\n    CardBody,\r\n    CardTitle,\r\n  } from \"reactstrap\";\r\n\r\nfunction Albums() {\r\n    const [{saved_album}, dispatch] = useDataLayerValue();\r\n\r\n    return (\r\n        <div className=\"albums\">\r\n            <Container fluid={true}>\r\n                <h4>Albums</h4>\r\n                <Row>\r\n                {saved_album?.items.map((item) => (\r\n                    <Col sm=\"2\">\r\n                        <Card>\r\n                            <CardImg\r\n                                top\r\n                                width=\"100%\"\r\n                                src={item.album.images[0].url}\r\n                                alt=\"Card image\"\r\n                            />\r\n                            <CardBody>\r\n                            <CardTitle tag=\"h5\">{item.album.name}</CardTitle>\r\n                            <CardText>{item.album.artists.map(artist => artist.name).join(\", \")}</CardText>\r\n                            {/* <Button>\r\n                                Add to cart\r\n                            </Button> */}\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                ))}\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Albums\r\n","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\Artists.js",["125"],"import React from 'react';\r\nimport { useDataLayerValue } from '../contextapi/DataLayer';\r\nimport './Artists.css';\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardImg,\r\n    CardText,\r\n    CardBody,\r\n    CardTitle,\r\n  } from \"reactstrap\";\r\n\r\nfunction Artists() {\r\n    const [{followed_artists}, dispatch] = useDataLayerValue();\r\n    return (\r\n        <div className=\"artists\">\r\n            <Container fluid={true}>\r\n                <h4>Nghệ sĩ</h4>\r\n                <Row>\r\n                {followed_artists?.artists.items.map((item) => (\r\n                    <Col sm=\"2\">\r\n                        <Card>\r\n                            <CardImg\r\n                                roundedCircle\r\n                                top\r\n                                width=\"100%\"\r\n                                src={item.images[0].url}\r\n                                alt=\"Card image\"\r\n                            />\r\n                            <CardBody>\r\n                            <CardTitle tag=\"h5\">{item.name}</CardTitle>\r\n                            <CardText>Follower: {item.followers.total}</CardText>\r\n                            {/* <Button>\r\n                                Add to cart\r\n                            </Button> */}\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                ))}\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Artists\r\n","C:\\Users\\Admin\\LearnReact\\spotify-clone-app\\src\\components\\Podcasts.js",["126"],"import React from 'react';\r\nimport { useDataLayerValue } from '../contextapi/DataLayer';\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardImg,\r\n    CardText,\r\n    CardBody,\r\n    CardTitle,\r\n  } from \"reactstrap\";\r\n\r\nfunction Podcasts() {\r\n    const [{podcasts},dispatch] = useDataLayerValue();\r\n    return (\r\n        <div className=\"podcasts\">\r\n            <Container fluid={true}>\r\n                <h4>Podcasts</h4>\r\n                <Row>\r\n                {podcasts?.items.map((item) => (\r\n                    <Col sm=\"2\">\r\n                        <Card>\r\n                            <CardImg\r\n                                top\r\n                                width=\"100%\"\r\n                                src={item.show.images[0].url}\r\n                                alt=\"Card image\"\r\n                            />\r\n                            <CardBody>\r\n                            <CardTitle tag=\"h5\">{item.show.name}</CardTitle>\r\n                            <CardText>{item.show.publisher}</CardText>\r\n                            {/* <Button>\r\n                                Add to cart\r\n                            </Button> */}\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                ))}\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Podcasts\r\n",{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":1,"column":21,"nodeType":"133","messageId":"134","endLine":1,"endColumn":29},{"ruleId":"131","severity":1,"message":"135","line":13,"column":11,"nodeType":"133","messageId":"134","endLine":13,"endColumn":15},{"ruleId":"131","severity":1,"message":"136","line":13,"column":17,"nodeType":"133","messageId":"134","endLine":13,"endColumn":26},{"ruleId":"131","severity":1,"message":"137","line":13,"column":35,"nodeType":"133","messageId":"134","endLine":13,"endColumn":46},{"ruleId":"138","severity":1,"message":"139","line":71,"column":6,"nodeType":"140","endLine":71,"endColumn":8,"suggestions":"141"},{"ruleId":"131","severity":1,"message":"142","line":13,"column":25,"nodeType":"133","messageId":"134","endLine":13,"endColumn":33},{"ruleId":"131","severity":1,"message":"143","line":11,"column":24,"nodeType":"133","messageId":"134","endLine":11,"endColumn":40},{"ruleId":"131","severity":1,"message":"142","line":11,"column":32,"nodeType":"133","messageId":"134","endLine":11,"endColumn":40},{"ruleId":"131","severity":1,"message":"144","line":4,"column":8,"nodeType":"133","messageId":"134","endLine":4,"endColumn":30},{"ruleId":"131","severity":1,"message":"142","line":11,"column":20,"nodeType":"133","messageId":"134","endLine":11,"endColumn":28},{"ruleId":"127","replacedBy":"145"},{"ruleId":"129","replacedBy":"146"},{"ruleId":"131","severity":1,"message":"142","line":16,"column":25,"nodeType":"133","messageId":"134","endLine":16,"endColumn":33},{"ruleId":"131","severity":1,"message":"142","line":15,"column":27,"nodeType":"133","messageId":"134","endLine":15,"endColumn":35},{"ruleId":"131","severity":1,"message":"142","line":16,"column":32,"nodeType":"133","messageId":"134","endLine":16,"endColumn":40},{"ruleId":"131","severity":1,"message":"142","line":15,"column":23,"nodeType":"133","messageId":"134","endLine":15,"endColumn":31},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'playlists' is assigned a value but never used.","'saved_album' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["149"],"'dispatch' is assigned a value but never used.","'current_playlist' is assigned a value but never used.","'AccountBoxOutlinedIcon' is defined but never used.",["147"],["148"],"no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},"Update the dependencies array to be: [dispatch]",{"range":"152","text":"153"},[1849,1851],"[dispatch]"]